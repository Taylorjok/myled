//
// Created by Administrator on 2020/10/30.
//
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>


#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <errno.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <string.h>
#include <stdint.h>
#include <termios.h>
#include <android/log.h>
#include <sys/ioctl.h>
#include "com_yeker_myled_JniLib.h"
/* Header for class com_yeker_myled_JniLib */

//#define LED_ON 0x1963
//#define LED_OFF 0x8125

#define  LOGI(...)  __android_log_print(ANDROID_LOG_INFO,LOG_TAG,__VA_ARGS__)
#define  LOGE(...)  __android_log_print(ANDROID_LOG_ERROR,LOG_TAG,__VA_ARGS__)
#define  LOGD(...)  __android_log_print(ANDROID_LOG_DEBUG,LOG_TAG,__VA_ARGS__)
#define LOG_TAG "yeker"

jint fd=0;

#ifndef _Included_com_yeker_myled_JniLib
#define _Included_com_yeker_myled_JniLib



/*
 * Class:     com_yeker_myled_JniLib
 * Method:    led_open
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_yeker_myled_JniLib_led_1open
  (JNIEnv *env, jobject obj)
  {
    LOGI("-------------%s----------------\n",__FUNCTION__);
    fd = open("/dev/myled_drv",O_RDWR);
    if(fd < 0)
        {
            LOGE("open:%s\n",strerror(errno));
            return -1;
        }
    return 0;
  }

/*
 * Class:     com_yeker_myled_JniLib
 * Method:    led_close
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_yeker_myled_JniLib_led_1close
  (JNIEnv *env, jobject obj)
  {
     LOGI("-------------%s----------------\n",__FUNCTION__);
    close(fd);
    return 0;
  }

/*
 * Class:     com_yeker_myled_JniLib
 * Method:    ledIoctl
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_yeker_myled_JniLib_ledIoctl
  (JNIEnv *env, jobject obj, jint flag)
  {
    ret = write(fd, &flag, sizeof(flag));
    if(ret < 0)
        {
            LOGE("write:%s\n",strerror(errno));
            return -1;
        }
        return 0;
  }


#endif

